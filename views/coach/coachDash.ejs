<%- include('../coachpartials/head') %>
<style>
  .dnone {
    display: none;
  }

  .fset {
    padding: 0px !important;
    font-size: 16px !important;
    font-weight: 500;
  }

  .iconWrapper {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  .iconWrapper i {
    font-size: 20px;
    margin-left: -30px;
    cursor: pointer;
  }

  .imagePreviewContainer {
    position: relative;
    width: 350px;
  }

  .preview_image {
    width: 350px;
  }

  .remove_image {
    position: absolute;
    right: -20px;
    top: -20px;
    font-size: 24px;
    display: none;
    cursor: pointer;
  }

  .addDocumentButton {
    background-color: #04befe;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px 7px;
    border-radius: 5px;
    width: 180px;
    margin: 0 auto;
  }

  .hidden {
    display: none !important;
    opacity: 0 !important;
  }


  #addDocumentButton {
    background-color: transparent;
    cursor: pointer;
  }

  #addPlayer {
    background-color: transparent;
    cursor: pointer;
  }

  .deleteField {
    font-size: 24px;
    color: red;
    cursor: pointer;
  }

  .required-highlight {
    background-color: #ffe6e6 !important;
  }

  .closeForm {
    font-size: 24px;
    fill: red;
    cursor: pointer;
  }

</style>
<div class="container-fluid">
  <div class="row">
    <div class="content-wrapper d-flex align-items-center auth-pages">
      <div class="card col-lg-7 mx-auto">
        <div class="card-body px-5 py-5">
          <%- include('../flash') %>
          <h3 class="card-title text-left mb-3">Register Players</h3>
          <form id="studentForm" action="/team/<%= coach.team._id %>/admin/register" method="POST" enctype="multipart/form-data">
            <div class="row">
              <div class="col-6">
                <div class="row">
                  <div class="col-12">
                    <div class="form-group">
                      <label class="form-text text-muted">
                        Select Option
                      </label>
                      <select name="role[0]" class="form-control" required>
                        <option value="football">Football</option>
                        <option value="cheer">Cheer</option>
                      </select>
                    </div>
                  </div>
                </div>
              </div>
              <div class="col-6">
                <div class="form-group">
                  <label class="form-text text-muted">
                    ASSOCIATION NAME
                  </label>
                  <input disabled value="<%= coach.team.name %>" type="text" class="form-control p_input" name="association[0]">
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-6">
                <div class="form-group">
                  <label class="form-text text-muted">
                    Player's Full Name
                  </label>
                  <input required type="text" class="form-control p_input" name="fullname[0]">
                </div>
              </div>
              <div class="col-6">
                <div class="form-group">
                  <label id="dob" class="form-text text-muted">
                    MM/DD/YYYY
                  </label>
                  <div class="d-flex">
                    <div class="col-4">
                      <select class="form-control" id="dobMonth" name="dobMonth[0]" required>
                        <option disabled selected value="">Month</option>
                        <option value="01">January</option>
                        <option value="02">February</option>
                        <option value="03">March</option>
                        <option value="04">April</option>
                        <option value="05">May</option>
                        <option value="06">June</option>
                        <option value="07">July</option>
                        <option value="08">August</option>
                        <option value="09">September</option>
                        <option value="10">October</option>
                        <option value="11">November</option>
                        <option value="12">December</option>
                      </select>
                    </div>
                    <div class="col-4">
                      <select class="form-control" id="dobDate" name="dobDate[0]" required>
                        <option disabled selected value="">Date</option>
                        <option value="01">1</option>
                        <option value="02">2</option>
                        <option value="03">3</option>
                        <option value="04">4</option>
                        <option value="05">5</option>
                        <option value="06">6</option>
                        <option value="07">7</option>
                        <option value="08">8</option>
                        <option value="09">9</option>
                        <option value="10">10</option>
                        <option value="11">11</option>
                        <option value="12">12</option>
                        <option value="13">13</option>
                        <option value="14">14</option>
                        <option value="15">15</option>
                        <option value="16">16</option>
                        <option value="17">17</option>
                        <option value="18">18</option>
                        <option value="19">19</option>
                        <option value="20">20</option>
                        <option value="21">21</option>
                        <option value="22">22</option>
                        <option value="23">23</option>
                        <option value="24">24</option>
                        <option value="25">25</option>
                        <option value="26">26</option>
                        <option value="27">27</option>
                        <option value="28">28</option>
                        <option value="29">29</option>
                        <option value="30">30</option>
                        <option value="31">31</option>
                      </select>
                    </div>
                    <div class="col-4">
                      <select class="form-control" id="dobYear" name="dobYear[0]" required>
                        <option disabled selected value="">Year</option>
                        <option value="2000">2000</option>
                        <option value="2001">2001</option>
                        <option value="2002">2002</option>
                        <option value="2003">2003</option>
                        <option value="2004">2004</option>
                        <option value="2005">2005</option>
                        <option value="2006">2006</option>
                        <option value="2007">2007</option>
                        <option value="2008">2008</option>
                        <option value="2009">2009</option>
                        <option value="2010">2010</option>
                        <option value="2011">2011</option>
                        <option value="2012">2012</option>
                        <option value="2013">2013</option>
                        <option value="2014">2014</option>
                        <option value="2015">2015</option>
                        <option value="2016">2016</option>
                        <option value="2017">2017</option>
                        <option value="2018">2018</option>
                        <option value="2019">2019</option>
                        <option value="2020">2020</option>
                        <option value="2021">2021</option>
                        <option value="2022">2022</option>
                        <option value="2023">2023</option>
                        <option value="2024">2024</option>
                      </select>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-6">
                <div class="form-group">
                  <label class="form-text text-muted">
                    Division of play
                  </label>
                  <select name="dop[0]" class="form-control" id="dop" required>
                    <option value="7U">7U</option>
                    <option value="8U">8U</option>
                    <option value="9U">9U</option>
                    <option value="10U">10U</option>
                    <option value="11U">11U</option>
                    <option value="12U">12U</option>
                    <option value="13U">13U</option>
                  </select>
                </div>
              </div>
              <div class="col-6">
                <div class="form-group">
                  <label class="form-text text-muted">
                    Parent/Guardian Name(s)
                  </label>
                  <input type="text" class="form-control p_input" name="parent[0]">
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-6">
                <div class="form-group">
                  <label class="form-text text-muted">
                    Phone Number
                  </label>
                  <input type="tel" class="form-control p_input" name="phone[0]">
                </div>
              </div>
              <div class="col-6">
                <div class="form-group">
                  <label class="form-text text-muted">
                    Complete address (including City, State, and Zip Code)
                  </label>
                  <input type="text" class="form-control p_input" name="address[0]">
                </div>
              </div>
            </div>
            <div class="row mb-4">
              <div class="col-6" onclick="disableRequire('captureImage[0]', 'image[0]')">
                <div class="panel" id="uploadPanel">
                  <!-- Upload Image Button -->
                  <div class="button_outer">
                    <div class="btn_upload" id="uploadButton">
                      <input required accept=".jpeg, .jpg, .png" type="file" id="upload_file" name="image[0]">
                      Upload Image <i class="ms-1 fa fa-upload"></i>
                    </div>
                    <div class="processing_bar"></div>
                    <div class="success_box"></div>
                  </div>
                </div>
                <div class="error_msg"></div>
                <div class="imagePreviewContainer">
                  <span class="remove_image">&times;</span>
                  <img class="preview_image">
                </div>
              </div>
              <div class="col-6" onclick="disableRequire('image[0]', 'captureImage[0]')">
                <div class="capture-container">
                  <div class="d-flex flex-column">
                    <input type="file" name="captureImage[0]" class="captured-image" style="display: none;">
                    <button type="button" class="start-camera button_outer btn_upload fset">Capture Image <i class="ms-1 fa fa-upload"></i></button>
                    <video class="video dnone mb-3 w-100" height="240" autoplay></video>
                    <button type="button" class="click-photo btn btn-primary dnone text-center">Click Photo</button>
                    <canvas class="canvas dnone" width="320" height="240"></canvas>
                  </div>
                </div>
              </div>
            </div>
            <div id="documentField"></div>
          </form>
          <div class="addDocumentButton mb-3">
            <button id="addDocumentButton">Add Document</button>
          </div>
          <div class="addDocumentButton mb-3">
            <button id="addPlayer">Add another Player<span id="playerCount" class="d-none">1</span></button>
          </div>
          <div class="text-center">
            <button id="registerButton" type="button" class="btn btn-primary btn-block enter-btn">Register All Players</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  const all_upload_btns = document.querySelectorAll(".col-6 .panel input[type='file']");
  all_upload_btns.forEach((input) => {
    input.addEventListener('change', function(event) {
      var target = event.target;
      var btn_outer = target.closest('.button_outer');
      var panel = target.closest('.panel');
      var imageContainer = panel.nextElementSibling.nextElementSibling;
      var image = imageContainer.querySelector('.preview_image');
      var removeButton = imageContainer.querySelector('.remove_image');

      var reader = new FileReader();
      reader.onload = function(e) {
        image.setAttribute('src', e.target.result);
        btn_outer.style.display = 'none';
        removeButton.style.display = 'inline-block';
      };
      reader.readAsDataURL(target.files[0]);
    });
  });

  document.querySelectorAll('.remove_image')
    .forEach((button) => {
      button.addEventListener('click', function(event) {
        var target = event.target;
        var imageContainer = target.parentElement;
        var panel = imageContainer.previousElementSibling.previousElementSibling;
        var input = panel.querySelector('input[type="file"]');
        var image = imageContainer.querySelector('.preview_image');

        image.removeAttribute('src'); // Remove the image preview
        input.value = ''; // Clear the file input
        panel.querySelector('.button_outer')
          .style.display = 'block'; // Show the upload button container
        target.style.display = 'none'; // Hide the remove button
      });
    });


  const addDocumentButton = document.getElementById('addDocumentButton');

  function appendForm(type) {
    const formContainer = document.getElementById('documentField');
    const newForm = document.createElement('div');
    let formContent;
    const playerCount = parseInt(document.getElementById('playerCount')
      .textContent);

    if (type === 'player') {
      newForm.setAttribute('id', `form${playerCount}`)
      formContent = `<hr>
      <div class='d-flex flex-row-reverse'>
        <svg onclick="deleteForm('form${playerCount}')" height="24px" class="closeForm" id="Layer_1" style="enable-background:new 0 0 512 512;" version="1.1" viewBox="0 0 512 512" width="24px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <path d="M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4  L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1  c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1  c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z" />
        </svg>
        </div>
<div class="row">
  <div class="col-6">
    <div class="row">
      <div class="col-12">
        <div class="form-group">
          <label class="form-text text-muted">
            Select Option
          </label>
          <select name="role" class="form-control" required>
            <option value="football">Football</option>
            <option value="cheer">Cheer</option>
          </select>
        </div>
      </div>
    </div>
  </div>
  <div class="col-6">
    <div class="form-group">
      <label class="form-text text-muted">
        Player's Full Name
      </label>
      <input required type="text" class="form-control p_input" name="fullname[${playerCount}]">
    </div>
  </div>
</div>
<div class="row">
  <div class="col-6">
    <div class="form-group">
      <label id="dob" class="form-text text-muted">
        MM/DD/YYYY
      </label>
      <div class="d-flex">
      <div class="col-4">
        <select class="form-control" class="dobMonth" name="dobMonth[${playerCount}]" required>
          <option disabled selected value="">Month</option>
          <option value="01">January</option>
          <option value="02">February</option>
          <option value="03">March</option>
          <option value="04">April</option>
          <option value="05">May</option>
          <option value="06">June</option>
          <option value="07">July</option>
          <option value="08">August</option>
          <option value="09">September</option>
          <option value="10">October</option>
          <option value="11">November</option>
          <option value="12">December</option>
        </select>
      </div>
      <div class="col-4">
        <select class="form-control" class="dobDate" name="dobDate[${playerCount}]" required>
          <option disabled selected value="">Date</option>
          <option value="01">1</option>
          <option value="02">2</option>
          <option value="03">3</option>
          <option value="04">4</option>
          <option value="05">5</option>
          <option value="06">6</option>
          <option value="07">7</option>
          <option value="08">8</option>
          <option value="09">9</option>
          <option value="10">10</option>
          <option value="11">11</option>
          <option value="12">12</option>
          <option value="13">13</option>
          <option value="14">14</option>
          <option value="15">15</option>
          <option value="16">16</option>
          <option value="17">17</option>
          <option value="18">18</option>
          <option value="19">19</option>
          <option value="20">20</option>
          <option value="21">21</option>
          <option value="22">22</option>
          <option value="23">23</option>
          <option value="24">24</option>
          <option value="25">25</option>
          <option value="26">26</option>
          <option value="27">27</option>
          <option value="28">28</option>
          <option value="29">29</option>
          <option value="30">30</option>
          <option value="31">31</option>
        </select>
      </div>
        <div class="col-4">
          <select class="form-control" class="dobYear" name="dobYear[${playerCount}]" required>
            <option disabled selected value="">Year</option>
            <option value="2000">2000</option>
            <option value="2001">2001</option>
            <option value="2002">2002</option>
            <option value="2003">2003</option>
            <option value="2004">2004</option>
            <option value="2005">2005</option>
            <option value="2006">2006</option>
            <option value="2007">2007</option>
            <option value="2008">2008</option>
            <option value="2009">2009</option>
            <option value="2010">2010</option>
            <option value="2011">2011</option>
            <option value="2012">2012</option>
            <option value="2013">2013</option>
            <option value="2014">2014</option>
            <option value="2015">2015</option>
            <option value="2016">2016</option>
            <option value="2017">2017</option>
            <option value="2018">2018</option>
            <option value="2019">2019</option>
            <option value="2020">2020</option>
            <option value="2021">2021</option>
            <option value="2022">2022</option>
            <option value="2023">2023</option>
            <option value="2024">2024</option>
          </select>
        </div>
      </div>
    </div>
  </div>
  <div class="col-6">
    <div class="form-group">
      <label class="form-text text-muted">
        Division of play
      </label>
      <select name="dop[${playerCount}]" class="form-control" id="dop" required>
      <option value="7U">7U</option>
      <option value="8U">8U</option>
      <option value="9U">9U</option>
      <option value="10U">10U</option>
      <option value="11U">11U</option>
      <option value="12U">12U</option>
      <option value="13U">13U</option>
      </select>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-6">
    <div class="form-group">
      <label class="form-text text-muted">
        Parent/Guardian Name(s)
      </label>
      <input type="text" class="form-control p_input" name="parent[${playerCount}]">
    </div>
  </div>
  <div class="col-6">
    <div class="form-group">
      <label class="form-text text-muted">
        Phone Number
      </label>
      <input type="tel" class="form-control p_input" name="phone[${playerCount}]">
    </div>
  </div>
</div>
<div class="row">
  <div class="col-12">
    <div class="form-group">
      <label class="form-text text-muted">
        Complete address (including City, State, and Zip Code)
      </label>
      <input type="text" class="form-control p_input" name="address[${playerCount}]">
    </div>
  </div>
</div>
<div class="row mb-4">
  <div class="col-6" onclick="disableRequire('captureImage[${playerCount}]', 'image[${playerCount}]')">
    <div class="panel" id="uploadPanel">
      <!-- Upload Image Button -->
      <div class="button_outer">
        <div class="btn_upload" id="uploadButton">
          <input required accept=".jpeg, .jpg, .png" type="file" id="upload_file" name="image[${playerCount}]"/>
          Upload Image <i class="ms-1 fa fa-upload"></i>
        </div>
        <div class="processing_bar"></div>
        <div class="success_box"></div>
      </div>
    </div>
    <div class="error_msg"></div>
    <div class="imagePreviewContainer">
      <span class="remove_image">&times;</span>
      <img class="preview_image">
    </div>
  </div>
  <div class="col-6" onclick="disableRequire('image[${playerCount}]', 'captureImage[${playerCount}]')">
    <div class="capture-container">
      <div class="d-flex flex-column">
        <input type="file" name="captureImage[${playerCount}]" class="captured-image" style="display: none;">
        <button type="button" class="start-camera button_outer btn_upload fset">Capture Image <i class="ms-1 fa fa-upload"></i></button>
        <video class="video dnone mb-3 w-100" height="240" autoplay></video>
        <button type="button" class="click-photo btn btn-primary dnone text-center">Click Photo</button>
        <canvas class="canvas dnone" width="320" height="240"></canvas>
      </div>
    </div>
  </div>
</div>
`;
      document.getElementById('playerCount')
        .textContent = parseInt(playerCount) + 1;

    } else if (type === 'document') {
      formContent = `
<div class="row align-items-center">
  <div class="col-6">
    <div class="form-group">
      <label class="form-label">Document type</label>
      <select required name="documentType[${playerCount - 1}]" class="form-control">
        <option value="State ID">State Id</option>
        <option value="Passport">Passport</option>
        <option value="School ID">School Id</option>
        <option value="SSN">SSN</option>
        <option value="Birth Certificate">Birth Certificate</option>
        <option value="Medical Wavier">Medical Wavier</option>
      </select>
    </div>
  </div>
  <div class="col-5">
    <div id="uploadPanel">
      <div class="button_outer">
        <div class="btn_upload" id="uploadButton">
          <input required accept=".jpeg, .jpg, .png" type="file" id="upload_document" name="document[${playerCount - 1}]" onclick="addAnimation()">
          Upload Document <i class="ms-1 fa fa-upload"></i>
        </div>
        <div class="processing_bar"></div>
        <div class="success_box"></div>
      </div>
    </div>
    <div class="error_msg"></div>
    <div class="uploaded_file_view" id="uploaded_view">
      <span class="file_remove" id="fil-remove">X</span>
    </div>
  </div>
  <div class="col-1">
    <i class='bx bx-trash deleteField' onclick="removeDocumentSection(this)"></i>
  </div>
</div>`;
    }

    newForm.innerHTML = formContent;
    formContainer.appendChild(newForm);

    document.querySelectorAll('.capture-container')
      .forEach(container => {
        let camera_button = container.querySelector(".start-camera");
        let video = container.querySelector(".video");
        let click_button = container.querySelector(".click-photo");
        let canvas = container.querySelector(".canvas");
        let captureInput = container.querySelector('.captured-image'); // File input to hold the captured image

        let stream;

        camera_button.addEventListener('click', async function() {
          // Hide other containers' videos and show only the current one
          document.querySelectorAll('.capture-container .video')
            .forEach(v => {
              if (v !== video) {
                v.style.display = "none";
                let tracks = v.srcObject ? v.srcObject.getTracks() : [];
                tracks.forEach(track => track.stop());
              }
            });

          click_button.style.display = "block";
          video.style.display = "block";
          camera_button.style.display = "none";

          stream = await navigator.mediaDevices.getUserMedia({
            video: true
            , audio: false
          });
          video.srcObject = stream;
        });

        click_button.addEventListener('click', function() {
          canvas.getContext('2d')
            .drawImage(video, 0, 0, canvas.width, canvas.height);

          canvas.toBlob(function(blob) {
            let file = new File([blob], 'capturedImage.jpg', {
              type: 'image/jpeg'
            });
            let dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            captureInput.files = dataTransfer.files;

            // Hide and stop video
            video.style.display = "none";
            click_button.style.display = "none";
            camera_button.style.display = "block";
            canvas.style.display = "block"; // Optional: Show canvas to see the captured photo
            stopCamera(stream);
          }, 'image/jpeg');
        });

        function stopCamera(stream) {
          if (stream) {
            let tracks = stream.getTracks();
            tracks.forEach(track => track.stop());
          }
        }
      });

    const all_upload_btns = document.querySelectorAll(".col-6 .panel input[type='file']");
    all_upload_btns.forEach((input) => {
      input.addEventListener('change', function(event) {
        var target = event.target;
        var btn_outer = target.closest('.button_outer');
        var panel = target.closest('.panel');
        var imageContainer = panel.nextElementSibling.nextElementSibling;
        var image = imageContainer.querySelector('.preview_image');
        var removeButton = imageContainer.querySelector('.remove_image');

        var reader = new FileReader();
        reader.onload = function(e) {
          image.setAttribute('src', e.target.result);
          btn_outer.style.display = 'none';
          removeButton.style.display = 'inline-block';
        };
        reader.readAsDataURL(target.files[0]);
      });
    });

    document.querySelectorAll('.remove_image')
      .forEach((button) => {
        button.addEventListener('click', function(event) {
          var target = event.target;
          var imageContainer = target.parentElement;
          var panel = imageContainer.previousElementSibling.previousElementSibling;
          var input = panel.querySelector('input[type="file"]');
          var image = imageContainer.querySelector('.preview_image');

          image.removeAttribute('src'); // Remove the image preview
          input.value = ''; // Clear the file input
          panel.querySelector('.button_outer')
            .style.display = 'block'; // Show the upload button container
          target.style.display = 'none'; // Hide the remove button
        });
      });

  }

  document.addEventListener('DOMContentLoaded', function() {
    addDocumentButton.addEventListener('click', function() {
      appendForm('document');
    });

    // Event listener for "ADD Player" button (unchanged)
    document.getElementById('addPlayer')
      .addEventListener('click', function() {
        appendForm('player');
      });
  });

  function removeDocumentSection(element) {
    element.parentElement.parentElement.remove();
  }

  // Function to prevent from Submitting the empty form

  document.addEventListener('DOMContentLoaded', function() {
    const registerButton = document.getElementById('registerButton');
    const form = document.getElementById('studentForm');

    registerButton.addEventListener('click', function(event) {
      if (form.checkValidity()) {
        form.submit();
      } else {
        event.preventDefault();
        highlightRequiredFields();
      }
    });

    function highlightRequiredFields() {
      const requiredFields = form.querySelectorAll('[required]');
      requiredFields.forEach(field => {
        field.classList.remove('required-highlight');
      });
      requiredFields.forEach(field => {
        if (!field.value.trim()) {
          field.classList.add('required-highlight');
        }
      });
    }
  });

</script>
<script>
  function deleteForm(id) {
    const formId = document.querySelector(`#${id}`);
    formId.remove();
  }

  const togglePassword = document
    .querySelector('#togglePassword');
  const password = document.querySelector('#password');
  togglePassword.addEventListener('click', () => {
    // Toggle the type attribute using
    // getAttribure() method
    const type = password
      .getAttribute('type') === 'password' ?
      'text' : 'password';
    password.setAttribute('type', type);
    // Toggle the eye and bi-eye icon
    this.classList.toggle('bi-eye');
  });
  const confirmPassword = document
    .querySelector('#confirmPasswordToggle');
  const confirmPasswordField = document.querySelector('#confirmPassword');
  confirmPassword.addEventListener('click', () => {
    // Toggle the type attribute using
    // getAttribure() method
    const type = confirmPasswordField
      .getAttribute('type') === 'password' ?
      'text' : 'password';
    confirmPasswordField.setAttribute('type', type);
    // Toggle the eye and bi-eye icon
    this.classList.toggle('bi-eye');
  });

  document.addEventListener('DOMContentLoaded', function() {
    var password = document.getElementById('password');
    var confirmPassword = document.getElementById('confirmPassword');
    var confirmPasswordFeedback = document.getElementById('confirmPasswordFeedback');
    var formGroup = confirmPassword.closest('.form-group');

    function checkPasswordMatch() {
      if (password.value && confirmPassword.value && password.value !== confirmPassword.value) {
        formGroup.classList.add('has-error');
        confirmPassword.classList.add('is-invalid');
        confirmPasswordFeedback.style.display = 'block';
      } else {
        formGroup.classList.remove('has-error');
        confirmPassword.classList.remove('is-invalid');
        confirmPasswordFeedback.style.display = 'none';
      }
    }

    confirmPassword.addEventListener('blur', checkPasswordMatch);
  });

</script>
<script>
  function addAnimation() {
    $('.btn_upload input[type="file"]')
      .on('change', function(e) {
        var ext = $(this)
          .val()
          .split('.')
          .pop()
          .toLowerCase();
        var btnOuter = $(this)
          .closest('.button_outer');
        var error_msg = btnOuter.next('.error_msg');
        var uploaded_view = btnOuter.next('#uploaded_view');

        if ($.inArray(ext, ['jpeg', 'jpg', 'png']) == -1) {
          error_msg.text('Not an Image...');
        } else {
          error_msg.text('');
          btnOuter.addClass('file_uploading');
          setTimeout(function() {
            btnOuter.addClass('file_uploaded');
          }, 3000); // Adjust timing if needed

          var uploadedFile = URL.createObjectURL(e.target.files[0]);
          setTimeout(function() {
            uploaded_view.addClass('showdisplayblock');
            uploaded_view.html('<img src="' + uploadedFile + '" />')
              .addClass('show');
          }, 1500); // Adjust timing if needed
        }
      });

    $('.file_remove')
      .on('click', function() {
        var uploaded_view = $(this)
          .closest('.uploaded_file_view');
        var btnOuter = uploaded_view.prev('.button_outer');
        uploaded_view.removeClass('showdisplayblock show')
          .html('');
        btnOuter.removeClass('file_uploading file_uploaded');
        btnOuter.find('input[type="file"]')
          .val('');
      });
  }

</script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.capture-container')
      .forEach(container => {
        let camera_button = container.querySelector(".start-camera");
        let video = container.querySelector(".video");
        let click_button = container.querySelector(".click-photo");
        let canvas = container.querySelector(".canvas");
        let captureInput = container.querySelector('.captured-image'); // File input to hold the captured image

        let stream;

        camera_button.addEventListener('click', async function() {
          // Hide other containers' videos and show only the current one
          document.querySelectorAll('.capture-container .video')
            .forEach(v => {
              if (v !== video) {
                v.style.display = "none";
                let tracks = v.srcObject ? v.srcObject.getTracks() : [];
                tracks.forEach(track => track.stop());
              }
            });

          click_button.style.display = "block";
          video.style.display = "block";
          camera_button.style.display = "none";

          stream = await navigator.mediaDevices.getUserMedia({
            video: true
            , audio: false
          });
          video.srcObject = stream;
        });

        click_button.addEventListener('click', function() {
          canvas.getContext('2d')
            .drawImage(video, 0, 0, canvas.width, canvas.height);

          canvas.toBlob(function(blob) {
            let file = new File([blob], 'capturedImage.jpg', {
              type: 'image/jpeg'
            });
            let dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            captureInput.files = dataTransfer.files;

            // Hide and stop video
            video.style.display = "none";
            click_button.style.display = "none";
            camera_button.style.display = "block";
            canvas.style.display = "block"; // Optional: Show canvas to see the captured photo
            stopCamera(stream);
          }, 'image/jpeg');
        });

        function stopCamera(stream) {
          if (stream) {
            let tracks = stream.getTracks();
            tracks.forEach(track => track.stop());
          }
        }
      });
  });

</script>
<script>
  function disableRequire(image, captureImage) {
    document.querySelector(`input[name="${image}"]`)
      .required = false;
    document.querySelector(`input[name="${captureImage}"]`)
      .required = true;
  }

</script>
<%- include('../coachpartials/footer') %>
